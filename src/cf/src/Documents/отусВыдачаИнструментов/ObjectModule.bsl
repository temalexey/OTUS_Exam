#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения) 
	
	// Начало замера производительности по APDEX
	ВремяНачала = ОценкаПроизводительности.НачатьЗамерВремени();
	
	// Контроль оплаты заказа клиента
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	отусВзаиморасчетыСКлиентамиОстатки.ЗаказКлиента КАК ЗаказКлиента,
	|	отусВзаиморасчетыСКлиентамиОстатки.СуммаОстаток КАК СуммаОстаток
	|ИЗ
	|	РегистрНакопления.отусВзаиморасчетыСКлиентами.Остатки КАК отусВзаиморасчетыСКлиентамиОстатки
	|ГДЕ
	|	отусВзаиморасчетыСКлиентамиОстатки.ЗаказКлиента = &ЗаказКлиента";
	Запрос.УстановитьПараметр("ЗаказКлиента", ЗаказКлиента);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда 
		СуммаЗаказаКлиента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЗаказКлиента, "СуммаДокумента");
		Если Выборка.СуммаОстаток < СуммаЗаказаКлиента Тогда
			ТекстСообщения = СтрШаблон(НСтр("ru = '%1 оплачен частично.'"), ЗаказКлиента);
			ВызватьИсключение ТекстСообщения;
		КонецЕсли;	
	Иначе	
		ТекстСообщения = СтрШаблон(НСтр("ru = '%1 не оплачен.'"), ЗаказКлиента);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	// Контроль остатков инструмента на складе
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	отусВыдачаИнструментовСостав.Инструмент КАК Инструмент,
	|	отусВыдачаИнструментовСостав.Количество КАК Количество
	|ПОМЕСТИТЬ втСостав
	|ИЗ
	|	Документ.отусВыдачаИнструментов.Состав КАК отусВыдачаИнструментовСостав
	|ГДЕ
	|	отусВыдачаИнструментовСостав.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Инструмент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	отусОстаткиИнструментовОстатки.Инструмент КАК Инструмент,
	|	отусОстаткиИнструментовОстатки.КоличествоОстаток КАК КоличествоОстаток
	|ПОМЕСТИТЬ втОстатки
	|ИЗ
	|	РегистрНакопления.отусОстаткиИнструментов.Остатки КАК отусОстаткиИнструментовОстатки
	|ГДЕ
	|	отусОстаткиИнструментовОстатки.Склад = &Склад
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Инструмент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втСостав.Инструмент КАК Инструмент,
	|	втСостав.Количество - ЕСТЬNULL(втОстатки.КоличествоОстаток, 0) КАК Количество
	|ИЗ
	|	втСостав КАК втСостав
	|		ЛЕВОЕ СОЕДИНЕНИЕ втОстатки КАК втОстатки
	|		ПО втСостав.Инструмент = втОстатки.Инструмент
	|ГДЕ
	|	ЕСТЬNULL(втОстатки.КоличествоОстаток, 0) < втСостав.Количество";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Склад", Склад);

	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ТекстСообщения = СтрШаблон(НСтр("ru = 'Не хватает остатка инструмента %1 в количестве %2 ед.'"), Выборка.Инструмент, Выборка.Количество);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,, Отказ);
		
		ЗаписьЖурналаРегистрации("Ошибка",, Метаданные.Документы.отусВыдачаИнструментов, Ссылка, ТекстСообщения);
	КонецЦикла;	
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;	
	
	// Движения по регистрам

	// Списание инструмента со склада
	НаборДвиженийОстатки = Движения.отусОстаткиИнструментов;
	НаборДвиженийОстатки.Записывать = Истина; 
	
	НаборДвиженийВыдано = Движения.отусВыданныеИнструменты;
	НаборДвиженийВыдано.Записывать = Истина;
	
	Для каждого ТекущаяСтрока Из Состав Цикл
	    Движение = НаборДвиженийОстатки.ДобавитьРасход();  
		Движение.Период			= Дата;
		Движение.Склад 			= Склад;
		Движение.Инструмент 	= ТекущаяСтрока.Инструмент;
		Движение.Количество     = ТекущаяСтрока.Количество; 
		
		Движение = НаборДвиженийВыдано.ДобавитьПриход();  
		Движение.Период			= Дата;
		Движение.ЗаказКлиента	= ЗаказКлиента;
		Движение.Склад 			= Склад;
		Движение.Инструмент 	= ТекущаяСтрока.Инструмент;
		Движение.Количество     = ТекущаяСтрока.Количество;
	КонецЦикла;
	
	Движения.Записать();
	
	// Начало замера производительности по APDEX
	ОценкаПроизводительности.ЗакончитьЗамерВремени("ВыдачаИнструментовПроведение", ВремяНачала);
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.отусЗаказКлиента") Тогда
		
		ЗаказКлиента = ДанныеЗаполнения.Ссылка;
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения, "Организация,Клиент,Склад");
		
		Для каждого ТекущаяСтрока Из ДанныеЗаполнения.Состав Цикл
			НоваяСтрока = Состав.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущаяСтрока);
		КонецЦикла;
		
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти
	
#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли