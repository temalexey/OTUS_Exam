#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Контроль остатков выданного инструмента
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	отусВозвратИнструментов.Инструмент КАК Инструмент,
	|	отусВозвратИнструментов.Количество КАК Количество
	|ПОМЕСТИТЬ втСостав
	|ИЗ
	|	Документ.отусВозвратИнструментов.Состав КАК отусВозвратИнструментов
	|ГДЕ
	|	отусВозвратИнструментов.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Инструмент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	отусВыданныеИнструменты.Инструмент КАК Инструмент,
	|	отусВыданныеИнструменты.КоличествоОстаток КАК КоличествоОстаток
	|ПОМЕСТИТЬ втОстатки
	|ИЗ
	|	РегистрНакопления.отусВыданныеИнструменты.Остатки КАК отусВыданныеИнструменты
	|ГДЕ
	|	отусВыданныеИнструменты.ЗаказКлиента = &ЗаказКлиента
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Инструмент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втСостав.Инструмент КАК Инструмент,
	|	втСостав.Количество - ЕСТЬNULL(втОстатки.КоличествоОстаток, 0) КАК Количество
	|ИЗ
	|	втСостав КАК втСостав
	|		ЛЕВОЕ СОЕДИНЕНИЕ втОстатки КАК втОстатки
	|		ПО втСостав.Инструмент = втОстатки.Инструмент
	|ГДЕ
	|	ЕСТЬNULL(втОстатки.КоличествоОстаток, 0) < втСостав.Количество"; 
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ЗаказКлиента", ЗаказКлиента);

	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
    	ТекстСообщения = СтрШаблон(НСтр("ru = 'Превышение количества выданного по заказу %1 инструмента %2 на %3 ед.'"), ЗаказКлиента, Выборка.Инструмент, Выборка.Количество);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,, Отказ);
		
		ЗаписьЖурналаРегистрации("Ошибка",, Метаданные.Документы.отусВозвратИнструментов, Ссылка, ТекстСообщения);
	КонецЦикла;	
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// Движения
	
	// Оприходование инструмента на склад
	НаборДвиженийОстатки = Движения.отусОстаткиИнструментов;
	НаборДвиженийОстатки.Записывать = Истина; 
	
	НаборДвиженийВыдано = Движения.отусВыданныеИнструменты;
	НаборДвиженийВыдано.Записывать = Истина;
	
	Для каждого ТекущаяСтрока Из Состав Цикл
	    Движение = НаборДвиженийОстатки.ДобавитьПриход();  
		Движение.Период			= Дата;
		Движение.Склад 			= Склад;
		Движение.Инструмент 	= ТекущаяСтрока.Инструмент;
		Движение.Количество     = ТекущаяСтрока.Количество; 
		
		Движение = НаборДвиженийВыдано.ДобавитьРасход();  
		Движение.Период			= Дата;
		Движение.ЗаказКлиента	= ЗаказКлиента;
		Движение.Склад 			= Склад;
		Движение.Инструмент 	= ТекущаяСтрока.Инструмент;
		Движение.Количество     = ТекущаяСтрока.Количество;
	КонецЦикла;
	
	Движения.Записать();
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.отусЗаказКлиента") Тогда
		
		ЗаказКлиента = ДанныеЗаполнения.Ссылка;
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения, "Организация,Клиент,Склад");
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	отусВыданныеИнструментыОстатки.Инструмент КАК Инструмент,
		|	отусВыданныеИнструментыОстатки.КоличествоОстаток КАК Количество
		|ИЗ
		|	РегистрНакопления.отусВыданныеИнструменты.Остатки КАК отусВыданныеИнструментыОстатки
		|ГДЕ
		|	отусВыданныеИнструментыОстатки.ЗаказКлиента = &ЗаказКлиента";
		
		Запрос.УстановитьПараметр("ЗаказКлиента", ЗаказКлиента);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = Состав.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		КонецЦикла;	
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти
	
#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли